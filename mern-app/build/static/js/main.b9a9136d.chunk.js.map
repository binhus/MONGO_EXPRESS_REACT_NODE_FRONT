{"version":3,"sources":["Components/CreatePages.jsx","Components/Page.jsx","App.js","reportWebVitals.js","index.js"],"names":["CreatePages","useState","name","setName","message","setMessage","handleClick","a","fetch","mode","method","headers","body","JSON","stringify","then","Response","json","Promise","resolve","catch","err","reject","request","type","value","onChange","event","target","onClick","Page","match","params","displayedName","setDisplayedName","console","log","pageHandle","param","result","page","useEffect","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAwCeA,EAtCK,WAAO,IAAD,EACAC,mBAAS,IADT,mBACjBC,EADiB,KACXC,EADW,OAEMF,mBAAS,MAFf,mBAEjBG,EAFiB,KAERC,EAFQ,KAIlBC,EAAW,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,6DAClBF,EAAW,WADO,SAEIG,MAAM,yCAA0C,CACpEC,KAAM,OACNC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,0BAEjCC,KAAMC,KAAKC,UAAUZ,KAEpBa,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACE,GAAD,OAAUC,QAAQC,QAAQF,MAC/BG,OAAM,SAACC,GAAD,OAASH,QAAQI,OAAOD,MAbf,QAEZE,EAFY,QAcJnB,SACVC,EAAWkB,EAAQnB,SAfL,2CAAH,sDAkBjB,OACE,gCACE,+CACA,uBACEoB,KAAK,OACLC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAWxB,EAAQwB,EAAMC,OAAOH,UAE5C,wBAAQD,KAAK,SAASK,QAAS,kBAAMvB,EAAY,CAACJ,UAAlD,qBAGCE,GAAW,4BAAIA,QCKP0B,EAtCF,SAAC,GAAe,IACnB5B,EADkB,EAAZ6B,MACSC,OAAf9B,KADkB,EAEgBD,mBAAS,MAFzB,mBAEnBgC,EAFmB,KAEJC,EAFI,OAGIjC,mBAAS,MAHb,mBAGnBG,EAHmB,KAGVC,EAHU,KAK1B8B,QAAQC,IAAIlC,GAEZ,IAAMmC,EAAU,uCAAG,WAAOC,GAAP,eAAA/B,EAAA,sEACEC,MAAM,yCAAD,OAA0C8B,GAAS,CACzE7B,KAAM,OACNC,OAAQ,MACRC,QAAS,CACP,eAAgB,mBAChB,8BAA+B,4BAGhCI,MAAK,SAACwB,GAAD,OAAYA,EAAOtB,UACxBF,MAAK,SAACE,GAAD,OAAUC,QAAQC,QAAQF,MAC/BG,OAAM,SAACC,GAAD,OAASH,QAAQI,OAAOD,MAXhB,OACXmB,EADW,OAYjBN,EAAiBM,EAAKtC,MAClBsC,EAAKpC,SACPC,EAAWmC,EAAKpC,SAdD,2CAAH,sDAwBhB,OANAqC,qBAAU,WACHR,GACHI,EAAWnC,MAIR+B,EACL,2DAA4BA,KAE5B7B,EAAU,4BAAIA,IAAe,4CCpBlBsC,MAXf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9C,IACjC,cAAC,IAAD,CAAO6C,KAAK,SAASC,UAAWhB,UCEzBiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9a9136d.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst CreatePages = () => {\n  const [name, setName] = useState('');\n  const [message, setMessage] = useState(null);\n\n  const handleClick = async (name) => {\n    setMessage(\"Wait...\")\n    const request = await fetch('https://mern-api-robson.herokuapp.com/', {\n      mode: \"cors\",\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': \"http://localhost:3000/\"\n      },\n      body: JSON.stringify(name),\n    })\n      .then((Response) => Response.json())\n      .then((json) => Promise.resolve(json))\n      .catch((err) => Promise.reject(err));\n      if (request.message) {\n        setMessage(request.message);\n      }\n  };\n  return (\n    <div>\n      <p>Create a page!</p>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(event) => setName(event.target.value)}\n      />\n      <button type=\"button\" onClick={() => handleClick({name})}>\n        Submit!\n      </button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default CreatePages;\n","import React, { useEffect, useState } from 'react';\n\nconst Page = ({ match }) => {\n  const { name } = match.params;\n  const [displayedName, setDisplayedName] = useState(null);\n  const [message, setMessage] = useState(null);\n\n  console.log(name);\n\n  const pageHandle = async (param) => {\n    const page = await fetch(`https://mern-api-robson.herokuapp.com/${param}`, {\n      mode: 'cors',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': 'http://localhost:3000/',\n      },\n    })\n      .then((result) => result.json())\n      .then((json) => Promise.resolve(json))\n      .catch((err) => Promise.reject(err));\n    setDisplayedName(page.name);\n    if (page.message) {\n      setMessage(page.message);\n    }\n  };\n\n  useEffect(() => {\n    if (!displayedName) {\n      pageHandle(name);\n    }\n  });\n\n  return displayedName ? (\n    <p>{`This page belongs to ${displayedName}`}</p>\n  ) : (\n    message ? <p>{message}</p> : <p>Loading...</p>\n  );\n};\n\nexport default Page;\n","import { Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport CreatePages from './Components/CreatePages';\nimport Page from './Components/Page';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/\" component={CreatePages} />\n        <Route path=\"/:name\" component={Page}/>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}